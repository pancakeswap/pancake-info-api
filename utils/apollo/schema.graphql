# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    subscription: Subscription
}

type Pair {
    id: ID!
    reserve0: BigDecimal!
    reserve1: BigDecimal!
    reserveBNB: BigDecimal!
    reserveUSD: BigDecimal!
    token0: Token!
    token0Price: BigDecimal!
    token1: Token!
    token1Price: BigDecimal!
    trackedReserveBNB: BigDecimal!
    trackedReserveUSD: BigDecimal!
    untrackedReserveBNB: BigDecimal!
    untrackedReserveUSD: BigDecimal!
    volumeToken0: BigDecimal!
    volumeToken1: BigDecimal!
    volumeBNB: BigDecimal!
    volumeUSD: BigDecimal!
}

type Token {
    allPairs(first: Int = 100, orderBy: Pair_orderBy, orderDirection: OrderDirection, skip: Int = 0, where: Pair_filter): [Pair!]
    decimals: BigInt!
    derivedBNB: BigDecimal!
    derivedUSD: BigDecimal!
    id: ID!
    name: String!
    symbol: String!
}

type Query {
    pair(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): Pair
    pairs(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: Pair_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: Pair_filter
    ): [Pair!]!
    token(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): Token
    tokens(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: Token_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: Token_filter
    ): [Token!]!
}

type Subscription {
    pair(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): Pair
    pairs(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: Pair_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: Pair_filter
    ): [Pair!]!
    token(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        id: ID!
    ): Token
    tokens(
        "The block at which the query should be executed. Can either be an `{ number: Int }` containing the block number or a `{ hash: Bytes }` value containing a block hash. Defaults to the latest block when omitted."
        block: Block_height,
        first: Int = 100,
        orderBy: Token_orderBy,
        orderDirection: OrderDirection,
        skip: Int = 0,
        where: Token_filter
    ): [Token!]!
}

enum OrderDirection {
    asc
    desc
}

enum Pair_orderBy {
    id
    reserve0
    reserve1
    reserveBNB
    reserveUSD
    token0
    token0Price
    token1
    token1Price
    trackedReserveBNB
    trackedReserveUSD
    untrackedReserveBNB
    untrackedReserveUSD
    volumeToken0
    volumeToken1
    volumeBNB
    volumeUSD
}

enum Token_orderBy {
    allPairs
    id
    name
    symbol
    decimals
    derivedBNB
    derivedUSD
}

input Block_height {
    hash: Bytes
    number: Int
}

input Pair_filter {
    id: ID
    id_gt: ID
    id_gte: ID
    id_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_not: ID
    id_not_in: [ID!]
    reserve0: BigDecimal
    reserve0_gt: BigDecimal
    reserve0_gte: BigDecimal
    reserve0_in: [BigDecimal!]
    reserve0_lt: BigDecimal
    reserve0_lte: BigDecimal
    reserve0_not: BigDecimal
    reserve0_not_in: [BigDecimal!]
    reserve1: BigDecimal
    reserve1_gt: BigDecimal
    reserve1_gte: BigDecimal
    reserve1_in: [BigDecimal!]
    reserve1_lt: BigDecimal
    reserve1_lte: BigDecimal
    reserve1_not: BigDecimal
    reserve1_not_in: [BigDecimal!]
    reserveBNB: BigDecimal
    reserveBNB_gt: BigDecimal
    reserveBNB_gte: BigDecimal
    reserveBNB_in: [BigDecimal!]
    reserveBNB_lt: BigDecimal
    reserveBNB_lte: BigDecimal
    reserveBNB_not: BigDecimal
    reserveBNB_not_in: [BigDecimal!]
    reserveUSD: BigDecimal
    reserveUSD_gt: BigDecimal
    reserveUSD_gte: BigDecimal
    reserveUSD_in: [BigDecimal!]
    reserveUSD_lt: BigDecimal
    reserveUSD_lte: BigDecimal
    reserveUSD_not: BigDecimal
    reserveUSD_not_in: [BigDecimal!]
    token0: String
    token0Price: BigDecimal
    token0Price_gt: BigDecimal
    token0Price_gte: BigDecimal
    token0Price_in: [BigDecimal!]
    token0Price_lt: BigDecimal
    token0Price_lte: BigDecimal
    token0Price_not: BigDecimal
    token0Price_not_in: [BigDecimal!]
    token0_contains: String
    token0_ends_with: String
    token0_gt: String
    token0_gte: String
    token0_in: [String!]
    token0_lt: String
    token0_lte: String
    token0_not: String
    token0_not_contains: String
    token0_not_ends_with: String
    token0_not_in: [String!]
    token0_not_starts_with: String
    token0_starts_with: String
    token1: String
    token1Price: BigDecimal
    token1Price_gt: BigDecimal
    token1Price_gte: BigDecimal
    token1Price_in: [BigDecimal!]
    token1Price_lt: BigDecimal
    token1Price_lte: BigDecimal
    token1Price_not: BigDecimal
    token1Price_not_in: [BigDecimal!]
    token1_contains: String
    token1_ends_with: String
    token1_gt: String
    token1_gte: String
    token1_in: [String!]
    token1_lt: String
    token1_lte: String
    token1_not: String
    token1_not_contains: String
    token1_not_ends_with: String
    token1_not_in: [String!]
    token1_not_starts_with: String
    token1_starts_with: String
    trackedReserveBNB: BigDecimal
    trackedReserveBNB_gt: BigDecimal
    trackedReserveBNB_gte: BigDecimal
    trackedReserveBNB_in: [BigDecimal!]
    trackedReserveBNB_lt: BigDecimal
    trackedReserveBNB_lte: BigDecimal
    trackedReserveBNB_not: BigDecimal
    trackedReserveBNB_not_in: [BigDecimal!]
    trackedReserveUSD: BigDecimal
    trackedReserveUSD_gt: BigDecimal
    trackedReserveUSD_gte: BigDecimal
    trackedReserveUSD_in: [BigDecimal!]
    trackedReserveUSD_lt: BigDecimal
    trackedReserveUSD_lte: BigDecimal
    trackedReserveUSD_not: BigDecimal
    trackedReserveUSD_not_in: [BigDecimal!]
    untrackedReserveBNB: BigDecimal
    untrackedReserveBNB_gt: BigDecimal
    untrackedReserveBNB_gte: BigDecimal
    untrackedReserveBNB_in: [BigDecimal!]
    untrackedReserveBNB_lt: BigDecimal
    untrackedReserveBNB_lte: BigDecimal
    untrackedReserveBNB_not: BigDecimal
    untrackedReserveBNB_not_in: [BigDecimal!]
    untrackedReserveUSD: BigDecimal
    untrackedReserveUSD_gt: BigDecimal
    untrackedReserveUSD_gte: BigDecimal
    untrackedReserveUSD_in: [BigDecimal!]
    untrackedReserveUSD_lt: BigDecimal
    untrackedReserveUSD_lte: BigDecimal
    untrackedReserveUSD_not: BigDecimal
    untrackedReserveUSD_not_in: [BigDecimal!]
    volumeToken0: BigDecimal
    volumeToken0_gt: BigDecimal
    volumeToken0_gte: BigDecimal
    volumeToken0_in: [BigDecimal!]
    volumeToken0_lt: BigDecimal
    volumeToken0_lte: BigDecimal
    volumeToken0_not: BigDecimal
    volumeToken0_not_in: [BigDecimal!]
    volumeToken1: BigDecimal
    volumeToken1_gt: BigDecimal
    volumeToken1_gte: BigDecimal
    volumeToken1_in: [BigDecimal!]
    volumeToken1_lt: BigDecimal
    volumeToken1_lte: BigDecimal
    volumeToken1_not: BigDecimal
    volumeToken1_not_in: [BigDecimal!]
    volumeBNB: BigDecimal
    volumeBNB_gt: BigDecimal
    volumeBNB_gte: BigDecimal
    volumeBNB_in: [BigDecimal!]
    volumeBNB_lt: BigDecimal
    volumeBNB_lte: BigDecimal
    volumeBNB_not: BigDecimal
    volumeBNB_not_in: [BigDecimal!]
    volumeUSD: BigDecimal
    volumeUSD_gt: BigDecimal
    volumeUSD_gte: BigDecimal
    volumeUSD_in: [BigDecimal!]
    volumeUSD_lt: BigDecimal
    volumeUSD_lte: BigDecimal
    volumeUSD_not: BigDecimal
    volumeUSD_not_in: [BigDecimal!]
}

input Token_filter {
    allPairs: [String!]
    allPairs_contains: [String!]
    allPairs_not: [String!]
    allPairs_not_contains: [String!]
    decimals: BigInt
    decimals_gt: BigInt
    decimals_gte: BigInt
    decimals_in: [BigInt!]
    decimals_lt: BigInt
    decimals_lte: BigInt
    decimals_not: BigInt
    decimals_not_in: [BigInt!]
    derivedBNB: BigDecimal
    derivedBNB_gt: BigDecimal
    derivedBNB_gte: BigDecimal
    derivedBNB_in: [BigDecimal!]
    derivedBNB_lt: BigDecimal
    derivedBNB_lte: BigDecimal
    derivedBNB_not: BigDecimal
    derivedBNB_not_in: [BigDecimal!]
    derivedUSD: BigDecimal
    derivedUSD_gt: BigDecimal
    derivedUSD_gte: BigDecimal
    derivedUSD_in: [BigDecimal!]
    derivedUSD_lt: BigDecimal
    derivedUSD_lte: BigDecimal
    derivedUSD_not: BigDecimal
    derivedUSD_not_in: [BigDecimal!]
    id: ID
    id_gt: ID
    id_gte: ID
    id_in: [ID!]
    id_lt: ID
    id_lte: ID
    id_not: ID
    id_not_in: [ID!]
    name: String
    name_contains: String
    name_ends_with: String
    name_gt: String
    name_gte: String
    name_in: [String!]
    name_lt: String
    name_lte: String
    name_not: String
    name_not_contains: String
    name_not_ends_with: String
    name_not_in: [String!]
    name_not_starts_with: String
    name_starts_with: String
    symbol: String
    symbol_contains: String
    symbol_ends_with: String
    symbol_gt: String
    symbol_gte: String
    symbol_in: [String!]
    symbol_lt: String
    symbol_lte: String
    symbol_not: String
    symbol_not_contains: String
    symbol_not_ends_with: String
    symbol_not_in: [String!]
    symbol_not_starts_with: String
    symbol_starts_with: String
}

scalar BigDecimal

scalar BigInt

scalar Bytes
